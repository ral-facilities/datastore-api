name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  tests:
    strategy:
      fail-fast: false
    runs-on: ubuntu-22.04

    name: Python ${{ matrix.python-version }} Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Do this early to minimise how long we wait for the health check later on
      - name: Docker compose up
        run: docker-compose -f tests/docker-compose.yaml up -d

      - name: Install python-ldap dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsasl2-dev python3.11-dev libldap2-dev libssl-dev

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Load Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('.github/requirements.txt') }}

      - name: Install Poetry & Nox
        run: pip install -r .github/requirements.txt

      - name: Load Poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Load Poetry cache for Nox tests session
        uses: actions/cache@v4
        with:
          path: /home/runner/work/datastore-api/datastore-api/.nox/tests*
          key: nox-tests-${{ hashFiles('poetry.lock') }}

      - name: Run Nox unit_tests
        run: nox -s unit_tests -- --cov --cov-report=xml

      - name: Wait for container to start
        run: |
          until docker ps --filter "name=icat_payara_container" --format "{{.Status}}" | grep -q "(healthy)"; do
            sleep 1
          done
        timeout-minutes: 3

      - name: Log container status
        run: docker ps

      - name: Run Nox integration_tests
        run: nox -s integration_tests

      - name: Docker compose down
        run: docker-compose -f tests/docker-compose.yaml down

      - name: Upload code coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


  linting:
    runs-on: ubuntu-22.04
    name: Code Linting
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('.github/requirements.txt') }}

      - name: Install Poetry & Nox
        run: pip install -r .github/requirements.txt

      - name: Load Poetry cache for Nox lint session
        uses: actions/cache@v4
        with:
          path: /home/runner/work/datastore-api/datastore-api/.nox/lint*
          key: nox-lint-${{ hashFiles('poetry.lock') }}

      - name: Run Nox lint session
        run: nox -s lint


  formatting:
    runs-on: ubuntu-22.04
    name: Code Formatting
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('.github/requirements.txt') }}
      - name: Install Poetry & Nox
        run: pip install -r .github/requirements.txt

      - name: Load Poetry cache for Nox black session
        uses: actions/cache@v4
        with:
          path: /home/runner/work/datastore-api/datastore-api/.nox/black*
          key: nox-black-${{ hashFiles('poetry.lock') }}

      - name: Run Nox black session
        run: nox -s black -- --check datastore_api tests noxfile.py


  safety:
    runs-on: ubuntu-22.04
    name: Dependency Safety
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('.github/requirements.txt') }}

      - name: Install Poetry & Nox
        run: pip install -r .github/requirements.txt

      - name: Load Poetry cache for Nox safety session
        uses: actions/cache@v4
        with:
          path: /home/runner/work/datastore-api/datastore-api/.nox/safety*
          key: nox-safety-${{ hashFiles('poetry.lock') }}

      - name: Run Nox safety session
        run: nox -s safety